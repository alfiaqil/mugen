
;===============================================================================
;IKEMEN GENERATIONS by OroCrimson
;===============================================================================
;YO! Thanks for downloading this screenpack! I made MUGEN GENERATIONS originally
;for MUGEN 1.1 because I wanted a widescreen HD Category style Screenpack and I
;couldn't find any at the time.
;
;Years later, I find I'm not really satisfied with how it looks, and I see people
;still use it. I noticed some folks trying to use it in IKEMEN GO, an awesome
;open source recreation of the MUGEN engine, and as I just tried my hand at
;porting one of Devon's screenpacks to IKEMEN, I figured I should do the same
;for MUGEN Generations as well, and fix some of the mistakes I made with this
;screenpack in the process.
;
;But as I took another look at my old work, I grew really ashamed of it. So I did
;the only sane thing, and decided I was going to rebuild it entirely.
;I'm still keeping it fairly simple like the original, but a little more polished. 
;===============================================================================
;SPECIAL THANKS
;Devon for making awesome screenpacks that helped me learn how they tick.
;Ryon for his wonderful tutorials that I used to make the first screenpack.
;D-Squad's Fight Chat for their emotional support and cheerleading.
;Good ol' Luke, who comes in clutch with graphic design elements when I need them.
;===============================================================================

[Characters]
 ;How to add characters
 ;---------------------
 ;Use the format:
 ;    charname, stagefilename1, stagefilename2, ...
 ;
 ;e.g. For a player with filename "kfm", and stage filename
 ;"stages/mybg.def" type (without the semicolon):
 ;    kfm, stages/mybg.def
 ;IKEMEN feature: There can be more than 1 stage assigned to character. In such
 ;case stage will be chosen randomly.
 ;
 ;If you want to load a different def file, you can enter it as a directory plus
 ;the def file. This example loads chars/kfm/alt-kfm.def:
 ;    kfm/alt-kfm.def, stages/mybg.def
 ;
 ;If you put "random" as the stagefilename, then a random stage will be selected
 ;for that player. e.g.
 ;    kfm, random
 ;IKEMEN feature: Unlike mugen, stage declaration (including random, which is
 ;default assignment) can be skipped without affecting other parameters.
 ;
 ;Optional parameters should follow on the same line (except 'slot' parameter),
 ;separated by commas. Each parameter has the form:
 ;    paramname = paramvalue
 ;where paramname is the name of the parameter type, and paramvalue is the value
 ;(data) that should be assigned to that parameter.
 ;With the exception of 'unlock' (which always has to be last parameter in line)
 ;parameters can be assigned in any order (after char and stage declaration).
 ;
 ;The optional parameters are:
 ;
 ; - music<roundno>
 ;   Set the paramvalue to the music file path that should be used at the start
 ;   of round when facing this character. Music volume, loopstart and loopend
 ;   values can follow, separated by spaces. paramvalue overrides stage DEF
 ;   bgmusic assignment, so you can re-use the same stage with unique music for
 ;   multiple characters.
 ;   IKEMEN feature: Setting optional <roundno> (typed as number) decides round
 ;   on which the music will be played (defaults to 1 if omitted). You can use
 ;   multiple music parameters for random selection.
 ;
 ; - musiclife
 ;   IKEMEN feature: Set the paramvalue to the music file path that should be
 ;   used when player's controlled character has (by default) less then 30% life
 ;   during deciding round (only affects side that is at risk of being defeated)
 ;   when facing this character. Further adjustments available via stage DEF
 ;   file. Music volume, loopstart and loopend values can follow, separated by
 ;   spaces. paramvalue overrides stage DEF bgmusic.life assignment. You can use
 ;   multiple musiclife parameters for random selection.
 ;
 ; - musicvictory
 ;   IKEMEN feature: Set the paramvalue to the music file that should start
 ;   right after this character scores final round K.O. and continue throughout
 ;   the victory screen. Music volume, loopstart and loopend values can follow,
 ;   separated by spaces. paramvalue overrides stage DEF bgmusic.victory
 ;   assignment. You can use multiple musicvictory parameters for random
 ;   selection. Unlike other music character parameters, musicvictory also works
 ;   in Versus type modes.
 ;
 ; - ai
 ;   IKEMEN feature: Set the paramvalue between 1 and 8 to force AI Level
 ;   regardless of difficulty and AI ramping settings.
 ;
 ; - vsscreen
 ;   IKEMEN feature: Set the paramvalue to 0 to avoid displaying versus screen
 ;   when facing this character.
 ;
 ; - victoryscreen
 ;   IKEMEN feature: Set the paramvalue to 0 to avoid displaying victory screen
 ;   when this character wins a match.
 ;
 ; - rounds
 ;   IKEMEN feature: Set the paramvalue to the number of rounds in order to
 ;   overwrite rounds number chosen in the settings.
 ;
 ; - time
 ;   IKEMEN feature: Set the paramvalue to the time (in seconds) in order to
 ;   overwrite round time chosen in the settings.
 ;
 ; - single
 ;   IKEMEN feature: Set the paramvalue to 1 to force facing this character
 ;   individually in team modes.
 ;
 ; - includestage
 ;   Set the paramvalue to 0 to avoid including this stage in the stage select
 ;   list (in VS, training modes, etc). The stage is also blocked from being
 ;   randomly selected for a match.
 ;   IKEMEN feature: Setting paramvalue to -1 prevents stage from being randomly
 ;   selected for a match, while still allowing you to choose it from the stage
 ;   select list.
 ;
 ; - bonus
 ;   IKEMEN feature: Set the paramvalue to 1 to include this character in "Bonus
 ;   Games" mode. At least 1 character needs this parameter for the mode to show
 ;   up in modes selection menu.
 ;
 ; - exclude
 ;   IKEMEN feature: Set the paramvalue to 1 to avoid including this character
 ;   in 'rows' and 'columns' screenpack selection grid. (similar result as
 ;   hiding unselectable AI only characters in mugen without need to create tons
 ;   of unnecessary select.def slots to do so). Excluded characters are not
 ;   added to randomselect pool and won't show up in VS 100 Kumite mode.
 ;
 ; - hidden
 ;   IKEMEN feature: Set the paramvalue to hide a character:
 ;   1: cursor can move to this cell, cursor, face and face background are not
 ;      rendered (same result as hiding selectable characters in mugen by
 ;      placing them outside visible grid, but without need to create lots of
 ;      unnecessary select.def slots to do so),
 ;   2: cell can't be selected, art is not rendered (slot is ignored until
 ;      character is unlocked).
 ;   3: cell behaves like randomselect slot until character is unlocked
 ;
 ; - order
 ;   Set the paramvalue to the ordering priority to give the character in
 ;   Arcade and Time Attack modes. A smaller value means you will fight the
 ;   character sooner (excluding 'ratio' Arcade mode, which allows more ordering
 ;   flexibility via 'arcade.ratiomatches' settings). The default order value is
 ;   1, if you omit this param. Edit *.maxmatches settings under [Options] to
 ;   customize amount of matches per order priority.
 ;   IKEMEN feature: Max 30 orders mugen limitation is lifted. Negative order
 ;   is reversed if character becomes unlocked (see 'unlock' parameter)
 ;
 ; - ordersurvival
 ;   IKEMEN feature: Set the paramvalue to the ordering priority to give the
 ;   character in survival mode. The default order value is 1, if you omit this
 ;   param. It works like 'order' parameter, just for different game modes
 ;   (survival / survival co-op / netplay survival co-op). To exclude character
 ;   from showing up in survival modes you can set it to order group outside
 ;   configured survival.maxmatches range (e.g. ordersurvival=0) Negative order
 ;   is reversed if character becomes unlocked (see 'unlock' parameter)
 ;
 ; - arcadepath
 ;   IKEMEN feature: Set the paramvalue to the lua file (file path relative to
 ;   game directory) containing custom arcade path. This parameter makes the
 ;   character ignore default *.maxmatches settings under [Options] section and
 ;   use arcade path coded entirely in lua, which allows implementing
 ;   functionality normally not possible in mugen (rival matches, branching
 ;   paths, secret bosses etc.)
 ;   https://github.com/K4thos/Ikemen_GO/wiki/Miscellaneous-Info#arcs
 ;
 ; - ratiopath
 ;   IKEMEN feature: Like 'arcadepath', but used only if the p2 team mode has
 ;   been set to 'ratio'. If not assigned, ratio team mode arcade run defaults
 ;   to 'arcade.ratiomatches' settings.
 ;
 ; - slot
 ;   IKEMEN feature: Slot parameter, which allows to assign multiple characters
 ;   into a single select screen slot, uses special syntax: declaration starts
 ;   with a line containing only 'slot = {'. The next and following lines have
 ;   characters added using the standard syntax. Closing '}' bracket in a new
 ;   line ends current slot declaration. Characters added this way can have few
 ;   extra parameters assigned:
 ;   - select: Set the paramvalue to the command that selects this character.
 ;     If multiple chars in this slot have the same paramvalue assigned, they
 ;     will be selected randomly.
 ;   - next: Set the paramvalue to the command that swaps the current slot
 ;     character with the next character that shares the same paramvalue.
 ;   - previous: Set the paramvalue to the command that swaps the current slot
 ;     character with the previous character that shares the same paramvalue.
 ;   Commands use the same syntax as mugen CMD files (comma is permitted)
 ;
 ; - unlock
 ;   IKEMEN feature: paramvalue is executed as Lua code condition, right after
 ;   new game mode is initiated and upon returning to main menu. If it evaluates
 ;   to boolean 'true' the character locked via 'hidden' parameter will become
 ;   selectable. On 'false' it will be hidden. Due to parameters syntax,
 ;   'unlock' has to be the very last parameter used in line (everything that
 ;   follows is treated as a pure Lua code). Default: true (if character is not
 ;   hidden, otherwise: false)
 ;   https://github.com/K4thos/Ikemen_GO/wiki/Miscellaneous-Info#lua_unlock
 ;
 ;You can also add a randomize icon to the select screen. To do this, put the
 ;word "randomselect" on a line of its own, with no extra parameters.
 ;
 ;Examples:
 ; kfm, stages/mybg.def, includestage=0
 ; kfm, stages/mybg.def, arcadepath=data/arcade.lua
 ; kfm, stages/mybg.def, music=sound/song.mp3, order=3, ai=8, hidden=2
 ; slot = {
 ;      kfm, stages/mybg.def, previous=d, next=w
 ;      SuaveDude, previous=d, next=w, select=/s+a
 ; }
 ;
 ;Insert your characters below.




;===============================================================================
;READ BELOW BEFORE USING THIS FOR THE FIRST TIME
;READ BELOW BEFORE USING THIS FOR THE FIRST TIME
;READ BELOW BEFORE USING THIS FOR THE FIRST TIME
;===============================================================================
;ORO'S INFINITE CHARACTER SLOT CATEGORY SYSTEM
;===============================================================================
;This should be fairly easy to use, compared to how MUGEN Generations worked.
;Instead of using blank slots to pad out each category, each category actually
;has just a single slot. However, it uses IKEMEN's feature to share slots for
;multiple characters to add an infinite amount of characters in each category.
;
;It also avoids the issue in MUGEN that made switching categories difficult.
;The one downside however is that these slots are shared between both players,
;so they can't navigate the same category at the same time. 
;
;To add your characters, simply go to the category you want to add a character
;to, and add a new line between the two {} symbols. Make sure every line ends in
;", previous=B, next=F" (case sensitive), as this is required for navigation.
;
;A KFM example has been provided in every category.
;===============================================================================
;READ ABOVE BEFORE USING THIS FOR THE FIRST TIME
;READ ABOVE BEFORE USING THIS FOR THE FIRST TIME
;READ ABOVE BEFORE USING THIS FOR THE FIRST TIME
;===============================================================================

;===============================================================================
;CATEGORY 01 - FANTASY
;===============================================================================
slot = {
kofa/kirby-kofa/kirby-kofa.def, previous=B, next=F
game/DivineMorrigan/DivineMorrigan.def, previous=B, next=F
kofa/dark-magician-girl-kofa/dark-magician-girl-kofa.def, previous=B, next=F
gowcaizer/ShaiaCV/ShaiaCV.def, previous=B, next=F
}
;===============================================================================
;CATEGORY 02 - HERO
;===============================================================================
slot = {
kofa/kamen-rider-kuuga-kofa/kamen-rider-kuuga-kofa.def, previous=B, next=F
saint/hyoga-kofa/hyoga-kofa.def, previous=B, next=F
saint/ikki-kofa/ikki-kofa.def, previous=B, next=F
game/rosemary/rosemary.def, previous=B, next=F
}
;===============================================================================
;CATEGORY 03 - SAMURAI
;===============================================================================
slot = {
samurai/Yoshitora/Yoshitora.def, previous=B, next=F
samurai/yumeji-kofa/yumeji-kofa.def, previous=B, next=F
samurai/washizuka-kofa/washizuka-kofa.def, previous=B, next=F
samurai/kojiroh/kojiroh.def, previous=B, next=F
}
slot = {
samurai/yuki-lb-kofa/yuki-lb-kofa.def, previous=B, next=F
kabuki/kabuki-kofa/kabuki-kofa.def, previous=B, next=F
samurai/kazuki-kofa/kazuki-kofa.def, previous=B, next=F
samurai/jubei-yagyu-kofa/jubei-yagyu-kofa.def, previous=B, next=F
}
;===============================================================================
;CATEGORY 04 - MARTIAL ART
;===============================================================================
slot = {
waku/bonus-kun-kofa/bonus-kun-kofa.def, previous=B, next=F
kofa/rin-oyama-kofa/rin-oyama-kofa.def, previous=B, next=F
kabuki/yagumo-kofa/yagumo-kofa.def, previous=B, next=F
samurai/lee-rekka-kofa/lee-rekka-kofa.def, previous=B, next=F
waku/arina-kofa/arina-kofa.def, previous=B, next=F
}
;===============================================================================
;CATEGORY 05 - MODERN
;===============================================================================
slot = {
neogeo/ai-kofa/ai-kofa.def, previous=B, next=F
neogeo/Yuki_NGBC_KOFM/Yuki NGBC KOFM.def, previous=B, next=F
cvtw/CVTW2SHIMO/CVTW2SHIMO.def, previous=B, next=F
gowcaizer/brider-kofa/brider-kofa.def, previous=B, next=F
}
;===============================================================================
;CATEGORY 06 - BEAST TAMER
;===============================================================================
slot = {
waku/mauru-kofa/mauru-kofa.def, previous=B, next=F
kabuki/kinu-kofa/kinu-kofa.def, previous=B, next=F
samurai/galford-kofa/galford-kofa.def, previous=B, next=F
waku/dandy-j-kofa/dandy-j-kofa.def, previous=B, next=F
}
;===============================================================================
;CATEGORY 07 - DARKNESS
;===============================================================================
slot = {
samurai/basara-kofa/basara-kofa.def, previous=B, next=F
kofm/Venom_MMV/Venom_MMV.def, previous=B, next=F
kofm/Ghost Rider-KOFM/Ghost Rider-KOFM.def, previous=B, next=F
}
;===============================================================================
;CATEGORY 08 - POWER
;===============================================================================
slot = {
kofa/sanosuke-kofa/sanosuke-kofa.def, previous=B, next=F
kofa/rocky-kofa/rocky-kofa.def, previous=B, next=F
neogeo/cyber-woo-kofa/cyber-woo-kofa.def, previous=B, next=F
anime/Supergirl/Supergirl.def, previous=B, next=F
}
;===============================================================================
;CATEGORY 09 - STRATEGIST
;===============================================================================
slot = {
kofa/lyserg-kofa/lyserg-kofa.def, previous=B, next=F
samurai/mina-kofa/mina-kofa.def, previous=B, next=F
kofa/wolfwood-kofa/wolfwood-kofa.def, previous=B, next=F
anime/Usopp/Usopp.def, previous=B, next=F
}
;===============================================================================
;CATEGORY 10 - SPEED
;===============================================================================
slot = {
saint/marine-kofa/marine-kofa.def, previous=B, next=F
kofa/cyborg-009-kofa/cyborg-009-kofa.def, previous=B, next=F
galaxy/roomi-kofa/roomi-kofa.def, previous=B, next=F
kofa/yamazaki-kofa/yamazaki-kofa.def, previous=B, next=F
}
;===============================================================================
;CATEGORY 11 - ASSASSIN
;===============================================================================
slot = {
anime/Battousai/Battousai.def, previous=B, next=F
samurai/shiki-kofa/shiki-kofa.def, previous=B, next=F
game/Wu-Ling/Wu-Ling.def, previous=B, next=F
}
;===============================================================================
;CATEGORY 12 - MUTANT
;===============================================================================
slot = {
kofm/Logan-KOFM/Logan-KOFM.def, previous=B, next=F
cvtw/CvTWLeoRE/CvTWLeo.def, previous=B, next=F
cvtw/CvTWLeo/CvTWLeo.def, previous=B, next=F
galaxy/gunter-kofa/gunter-kofa.def, previous=B, next=F
}
;===============================================================================
;CATEGORY 13 - BOSS
;===============================================================================
slot = {
game/wacker/wacker.def, previous=B, next=F
kofm/Spawn/Spawn.def, previous=B, next=F
anime/char's_zaku/char's_zaku.def, previous=B, next=F
}
;===============================================================================
;CATEGORY 14 - MISC
;===============================================================================
;slot = {    
;game/Flying KFM/Flying KFM.def, previous=B, next=F
;kfm, previous=B, next=F
;kfm720, previous=B, next=F
;}
;===============================================================================
DO NOT DELETE THIS LINE!!! this is the gap between misc and random
randomselect



;-------------------------------------------------------------------------------
[ExtraStages]
 ;Put extra stages here. They will be available in modes that allow selecting
 ;stage manually. For example, you can insert "stages/mybg.def".
 ;
 ;Optional parameters may follow on the same line, separated by commas.
 ;Each parameter has the form:
 ;    paramname = paramvalue
 ;where paramname is the name of the parameter type, and paramvalue is the value
 ;to assign that parameter. The optional parameters are:
 ;
 ; - music<roundno>
 ;   IKEMEN feature: Set the paramvalue to the music file path that should be
 ;   used at the start of round. Music volume, loopstart and loopend values can
 ;   follow, separated by spaces. Tracks will be played randomly from the
 ;   available pool if multiple parameters have been assigned or bgmusic is
 ;   present in the stage DEF file. Setting optional <roundno> (typed as number)
 ;   decides round on which the music will be played (defaults to 1 if omitted)
 ;
 ; - musiclife
 ;   IKEMEN feature: Set the paramvalue to the music file path that should be
 ;   used when player's controlled character has (by default) less then 30% life
 ;   during deciding round (only affects side that is at risk of being
 ;   defeated). Further adjustments available via stage DEF file. Music volume,
 ;   loopstart and loopend values can follow, separated by spaces.  Tracks will
 ;   be played randomly from the available pool if multiple parameters have been
 ;   assigned or bgmusic.life is present in the stage DEF file.
 ;
 ; - musicvictory
 ;   IKEMEN feature: Set the paramvalue to the music file path that should kick
 ;   in right after the final round K.O. and continue throughout the victory
 ;   screen. Music volume, loopstart and loopend frame values can follow,
 ;   separated by spaces. Tracks will be played randomly from the available pool
 ;   if multiple parameters have been assigned or bgmusic.victory is present in
 ;   the stage DEF file.
 ;
 ; - order
 ;   IKEMEN feature: Set the paramvalue to the ordering priority to give the
 ;   stage in Arcade and Time Attack modes. If there is at least 1 stage with
 ;   assigned order, facing opponent with the exact order paramvalue will result
 ;   in stage being randomly chosen from stages with the matching order. Stages
 ;   can have multiple order parameters assigned at the same time.
 ;
 ; - unlock
 ;   IKEMEN feature: paramvalue is executed as Lua code condition, right after
 ;   new game mode is initiated and upon returning to main menu. If it evaluates
 ;   to boolean 'true' the stage will become manually selectable. On 'false' it
 ;   will be hidden. Due to parameters syntax, 'unlock' has to be the very last
 ;   parameter used in line (everything that follows is treated as a pure Lua
 ;   code). Default: true.
 ;   https://github.com/K4thos/Ikemen_GO/wiki/Miscellaneous-Info#lua_unlock
 ;
 ;Examples:
 ; stages/mybg.def, music=sound/song.mp3, music=sound/song2.mp3
 ; stages/mybg.def, order=3
 ;
 ;Insert your stages below.

;stages/stage0.def
;stages/kfm.def
stages/arina/WW7-Arina Stage.def
stages/rai/WW7-Rai Stage.def
stages/slash/WW7-Slash Stage.def
stages/tesse/WW7-Tesse Stage.def
stages/fernandez/WW7-Fernandez Stage.def
stages/kabuki/Ooeyama.def
stages/shaia/VFShaia Stage.def
stages/marion/VFG-Marion.def
stages/Konoha_Village/Konoha Village.def

;-------------------------------------------------------------------------------
[Options]
 ;Here you set the maximum number of matches to fight before game ends in arcade
 ;mode. The first number is the number of matches against characters with
 ;order=1, followed by order=2 and order=3 respectively. For example, for 4,3,1
 ;you will fight up to 4 randomly-picked characters who have order=1, followed
 ;by 3 with order=2 and 1 with order=3.
 ;IKEMEN feature: Max 30 orders mugen limitation is lifted.
 ;IKEMEN feature: Characters can use individual maxmatches settings (see
 ;'maxmatches' parameter in [Characters] section)

 ;Maximum number of matches to fight before game ends in Arcade single mode.
arcade.maxmatches = 6,1,1,0,0,0,0,0,0,0

 ;Like arcade.maxmatches, but applies to Arcade team modes (sans 'Ratio').
team.maxmatches = 4,1,1,0,0,0,0,0,0,0

 ;Maximum number of matches to fight before game ends in Time Attack mode.
timeattack.maxmatches = 6,1,1,0,0,0,0,0,0,0

 ;IKEMEN feature: Similar to arcade.maxmatches, but applies to Survival mode.
 ;Use -1 value to choose which order number should have unlimited matches.
 ;By omitting -1 survival mode will end after particular amount of matches set
 ;below (in such case you can actually "complete" the mode).
survival.maxmatches = -1,0,0,0,0,0,0,0,0,0

 ;IKEMEN feature: A 'Ratio' mode allows each team to select up to 3 characters
 ;and distribute 4 "ratio levels" amongst them, affecting their life and damage
 ;(ratio 2 is the default to which other ratios are compared, percentages are
 ;adjustable in options screen).
 ;Arcade ratio matches use 'ratiomatches' configuration instead of 'maxmatches'
 ;settings. Each entry here, separated by commas, represents a single match and
 ;consists of 2 assignments, separated by colon. Assignment on the left side of
 ;colon refers to the number of characters you will face in this match (valid
 ;numbers from 1 to 3, or a random selection range, consisting of one number,
 ;followed by a dash and another number). Assignment written after colon refers
 ;to character's order param, that can be used to limit which characters should
 ;be randomly chosen for this match. For example 2-3:4 entry means a match
 ;against team of 2 or 3 characters, chosen from characters with order=4.
arcade.ratiomatches = 1-3:1, 3:1, 2:1, 2:1, 1:2, 3:1, 1-2:3

 ;AI ramping
 ;IKEMEN feature: AI ramping settings has been moved here from mugen.cfg
 ;You can view AI ramping output for all battles from the last chosen mode via
 ;debug/t_aiRamp.txt (useful reference also for vanilla mugen).

 ;Arcade / Time Attack single mode AI ramping
 ;For both parameters below, the first number corresponds to the number of
 ;matches won, and the second number to the AI difficulty offset. The actual
 ;difficulty is the sum of the AI difficulty level (set in the options menu) and
 ;the value of the offset at a particular match.
 ;  AIramp.start = start_match, start_diff
 ;  AIramp.end   = end_match, end_diff
 ;The difficulty offset function is a constant value of start_diff from the
 ;first match until start_match matches have been won. From then the offset
 ;value increases linearly from start_diff to end_diff. After end_diff matches
 ;have been won, the offset value is end_diff.
 ;  e_d            /----------
 ;               /
 ;  s_d _______/
 ;     ^      ^     ^        ^
 ;   1st_m   s_m   e_m     last_m
 ;For example, if you have:
 ;  AIramp.start = 2,0
 ;  AIramp.end   = 4,2
 ;For 6 matches at level 4, the difficulty will be (by match):
 ;  4,4,4,5,6,6

arcade.AIramp.start = 2, 0
arcade.AIramp.end   = 4, 2

 ;Arcade / Time Attack team modes AI ramping (sans 'Ratio')
 ;For 4 matches at level 4 and default values, the difficulty will be:
 ;  4,4,5,6

team.AIramp.start = 1, 0
team.AIramp.end   = 3, 2

 ;Arcade / Time Attack 'Ratio' mode AI ramping
 ;For 4 matches at level 4 and default values, the difficulty will be:
 ;  4,4,5,6

ratio.AIramp.start = 1, 0
ratio.AIramp.end   = 3, 2

 ;Survival Mode AI ramping
 ;For 16 matches at level 4 and default values, the difficulty will be:
 ;  1,1,1,2,2,3,3,4,4,4,5,5,6,6,7,7,8

survival.AIramp.start = 0, -3
survival.AIramp.end   = 16, 4

;-------------------------------------------------------------------------------
[StoryMode]
 ;Story Mode arcs declaration. Assigned arcs are selectable via Story Mode
 ;submenu ('menu.itemname.storymode' parameter in screenpack DEF file)
 ;
 ;Declaring arcs consists of setting up following parameters:
 ; - name
 ;   IKEMEN feature: Set to name that should be returned by GameMode trigger.
 ;   This parameter also initiates new story arc declaration, so it has to be
 ;   assigned before any other parameter used by the same arc. All arcs should
 ;   have unique names.
 ;
 ; - displayname
 ;   IKEMEN feature: Set to name that should be displayed in Story Mode submenu.
 ;
 ; - path
 ;   IKEMEN feature: Path to file with lua extension (relative to game
 ;   directory), containing story mode arc coded in Lua language.
 ;   https://github.com/K4thos/Ikemen_GO/wiki/Miscellaneous-Info#arcs
 ;
 ; - unlock
 ;   IKEMEN feature: Pure Lua code, executed exactly as is, each time upon
 ;   loading main menu. If it evaluates to boolean 'true' the story arc will be
 ;   selectable from story mode submenu, or hidden on 'false'. Default: true.
 ;   https://github.com/K4thos/Ikemen_GO/wiki/Miscellaneous-Info#lua_unlock
 ;
 ;Examples:
 ; name = arc1
 ; displayname = Kung Fu Story Part I
 ; path = data/story/arc1.lua
 ; unlock = true
 ;
 ; name = arc2
 ; displayname = Kung Fu Story Part II
 ; path = data/story/arc2.lua
 ; unlock = true
 ;
 ;Declare your Story Mode arcs below.

